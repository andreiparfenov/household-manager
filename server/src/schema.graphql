scalar Date
scalar JSON

type Query {
  getFamily: Family
  getMessages: [Message]
  #getFolders(parent: String): [Folder]
  #getFolder(id: String!): Folder
}

#type Folder {
#  id: String
#  name: String
#  parent: String
#  description: String
#  shareWith: [JSON]
#}

type Family {
  id: String
  familyName: String
  members: [JSON]
}

type Message {
  id: String
  content: String
  author: JSON
  createdAt: String
}

type Mutation {
  captureEmail(email: String!): User
  inviteMember(email: String!, familyId: String!): User
  signup(id: String!, firstname: String!, lastname: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createMessage(content: String!): Message
}

type User {
  id: String
  name: String
  firstname: String
  lastname: String
  email: String
  avatarColor: String
  jobTitle: String
  family: String
  role: String
  status: String
  createdAt: Date
}

type AuthPayload {
  token: String!
  user: User!
}